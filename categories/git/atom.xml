<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Winter'Blog]]></title>
  <link href="http://www.rails.pub/categories/git/atom.xml" rel="self"/>
  <link href="http://www.rails.pub/"/>
  <updated>2016-02-22T19:00:13+08:00</updated>
  <id>http://www.rails.pub/</id>
  <author>
    <name><![CDATA[Winter]]></name>
    <email><![CDATA[{"address"=>&#8220;zwtao90@gmail.com&#8221;, &#8220;share_subject&#8221;=>&#8221;:title by :author&#8221;, &#8220;share_message&#8221;=>&#8221;:title by :author - :url&#8221;, &#8220;share_link_text&#8221;=>&#8221;Email&#8221;, &#8220;share_link_title&#8221;=>&#8221;Share via email&#8221;, &#8220;contact_link_text&#8221;=>&#8221;Email :author&#8221;, &#8220;contact_link_title&#8221;=>&#8221;Email :author&#8221;}]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Base]]></title>
    <link href="http://www.rails.pub/blog/2015/06/18/git-base/"/>
    <updated>2015-06-18T11:13:48+08:00</updated>
    <id>http://www.rails.pub/blog/2015/06/18/git-base</id>
    <content type="html"><![CDATA[<p>起步
<code>bash
git init    #git初始化
git add -A  #添加所有文件到版本控制中
</code>
远程仓库地址设置相关
<code>bash
git clone git://github.com/winterbang/projectname # 检出仓库
git remote -v  # 查看配置中远程仓库地址
git remote add [name] [url]  # 给远程仓库地址命名并添加到配置中
git remote rm [name]  # 删除配置中指定的远程仓库地址
git remote set-url --push [name] [newUrl]  # 修改配置中某仓库名称的地址
git pull [remoteName] [localBranchName]  # 拉取指定的远程仓库到指定分支
git push [remoteName] [localBranchName]  # 推送指定分支到指定的远程仓库
git push [remoteName] [localBranchName]:[remoteBranchName]  # 推送本地指定分支到指定的远程分支
</code>
分支操作相关
<code>bash
git branch # 查看本地分支
git branch -r # 查看远程分支
git branch [name] # 创建本地分支，并不切换到新分支
git checkout [name] # 切换分支
git checkout -b [name] # 创建新分支并立即切换到新分支
git branch -d [name] # 删除已经参与合并了的分支，如果想强制删除一个分支，可以使用-D选项
git merge [name] # 将名称为[name]的分支与当前分支合并
git push origin [name] # 创建远程分支(本地分支push到远程)
git push origin :heads/[name] 或 $ git push origin :[name] # 删除远程分支
</code>
标签tag操作相关
<code>bash
git tag # 查看版本
git tag [name] # 创建版本
git tag -d [name] # 删除版本
git push origin [name] # 创建远程版本(本地版本push到远程)
git push origin :refs/tags/[name] # 删除远程版本
git pull origin --tags # 合并远程仓库的tag到本地
git push origin --tags # 上传本地tag到远程仓库
git tag -a [name] -m 'yourMessage' # 创建带注释的tag
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git]]></title>
    <link href="http://www.rails.pub/blog/2015/06/18/git-install/"/>
    <updated>2015-06-18T11:00:24+08:00</updated>
    <id>http://www.rails.pub/blog/2015/06/18/git-install</id>
    <content type="html"><![CDATA[<h3>git 安装</h3>

<p><code>ubuntu</code>
<code>bash
sudo apt-get install git
sudo apt-get install git-core
</code>
<code>mac</code>
<code>bash
brew install git
</code></p>
]]></content>
  </entry>
  
</feed>
